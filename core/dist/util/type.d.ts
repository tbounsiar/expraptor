import { HttpClientErrorCode, HttpServerErrorCode, HttpSuccessCode } from "./enum";
export declare type RequestHeader = "A-IM" | "Accept" | "Accept-Charset" | "Accept-Encoding" | "Accept-Language" | "Accept-Datetime" | "Access-Control-Request-Method" | "Access-Control-Request-Headers" | "Authorization" | "Cache-Control" | "Connection" | "Content-Length" | "Content-Type" | "Cookie" | "Date" | "Expect" | "Forwarded" | "From" | "Host" | "If-Match" | "If-Modified-Since" | "If-None-Match" | "If-Range" | "If-Unmodified-Since" | "Max-Forwards" | "Origin" | "Pragma" | "Proxy-Authorization" | "Range" | "Referer" | "TE" | "User-Agent" | "Upgrade" | "Via" | "Warning" | "Dnt" | "X-Requested-With" | "X-CSRF-Token";
export declare type ResponseHeader = "Accept-Patch" | "Accept-Ranges" | "Age" | "Allow" | "Alt-Svc" | "Cache-Control" | "Connection" | "Content-Disposition" | "Content-Encoding" | "Content-Language" | "Content-Length" | "Content-Location" | "Content-Range" | "Content-Type" | "Date" | "Delta-Base" | "ETag" | "Expires" | "IM" | "Last-Modified" | "Link" | "Location" | "Pragma" | "Proxy-Authenticate" | "Public-Key-Pins" | "Retry-After" | "Server" | "Set-Cookie" | "Strict-Transport-Security" | "Trailer" | "Transfer-Encoding" | "Tk" | "Upgrade" | "Vary" | "Via" | "Warning" | "WWW-Authenticate" | "Content-Security-Policy" | "Refresh" | "X-Powered-By" | "X-Request-ID" | "X-UA-Compatible" | "X-XSS-Protection";
export declare type HttpError = HttpClientErrorCode | HttpServerErrorCode;
export declare type HttpStatusCode = HttpSuccessCode | HttpError;
export declare const HttpStatusMessage: Record<HttpStatusCode, string>;
